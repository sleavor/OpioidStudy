df = read_txt('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read_delim('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read.delim('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
View(df)
df = df %>% mutate(death_per_100k = Deaths/Population*100000)
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
# tell here where we are so we can use it elsewhere
here::i_am("R/include.R")
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
# tell here where we are so we can use it elsewhere
here::i_am("R/include.R")
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000)
View(df)
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
drop(Notes=="Total")
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
View(df)
