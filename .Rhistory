janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(state="West Virginia", 2012,
ifelse(state=="Michigan" | state =="Tennessee" | state=="Washington", 2016,
ifelse(state=="Kentucky", 2013, 0))))
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(state=="West Virginia", 2012,
ifelse(state=="Michigan" | state =="Tennessee" | state=="Washington", 2016,
ifelse(state=="Kentucky", 2013, 0))))
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(State=="West Virginia", 2012,
ifelse(State=="Michigan" | State =="Tennessee" | State=="Washington", 2016,
ifelse(State=="Kentucky", 2013, 0))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
#Treatment Year for online provider access
df = df %>% mutate(treatment_year = ifelse(State=="Kentucky", 2005,
ifelse(State=="Massachusetts", 2011,
ifelse(State=="Michigan", 2003,
ifelse(State=="New York", 2010,
ifelse(State=="North Carolina" | State=="Tennessee", 2007,
ifelse(State=="Washington", 2012,
ifelse(State=="West Virginia", 2004, 0))))))))
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
#Treatment Year for online provider access
df = df %>% mutate(treatment_year = ifelse(State=="Kentucky", 2005,
ifelse(State=="Massachusetts", 2011,
ifelse(State=="Michigan", 2003,
ifelse(State=="New York", 2010,
ifelse(State=="North Carolina" | State=="Tennessee", 2007,
ifelse(State=="Washington", 2012,
ifelse(State=="West Virginia", 2004, 0))))))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
#Treatment Year is if they legalize weed.
df = df %>% mutate(treatment_year = ifelse(State=="Alaska" | State=="Oregon", 2014,
ifelse(State=="Arizona" | State=="Montana" | State=="New Jersey", 2020,
ifelse(State=="California" | State=="Maine" | State=="Massachusetts" | State=="Nevada", 2016,
ifelse(State=="Colorado" | State=="Washington", 2012,
ifelse(State=="Illinois", 2019,
ifelse(State=="Michigan" | State=="Vermont", 2018, 0)))))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
df %>% group_by(treatment_year) %>% sort() %>% kbl()
utils::install.packages("librarian")
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
df %>% group_by(treatment_year) %>% sort() %>% kbl()
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
df %>% group_by(treatment_year) %>% sort() %>% kbl()
df %>% group_by(State) %>% sort(treatment_year) %>% select(treatment_year) %>% kbl()
df %>% group_by(State) %>% sort() %>% select(treatment_year) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = treatment_year) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% drop(treatment_year==0) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% drop(0) %>% kbl()
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>%
subset(treatment_year != 0) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>%
subset(treatment_year != 0) %>% sort() %>%  kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>%
subset(treatment_year != 0) %>% sort(by=treatment_year) %>%  kbl()
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(treatment_year != 0) %>% kbl()
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(treatment_year != 0) %>% kbl()
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(Treatment_Year != 0) %>% kbl()
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(Treatment_Year != 0) %>% kbl(format="Latex")
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(Treatment_Year != 0) %>% kbl(format="latex")
# Plot event-study coefficients
ggdid(agg_effects_es)
#Summarizing Data
df %>% group_by(State) %>% summarize(Mean_Death_Rate = mean(death_per_100k)) %>% kbl(format="latex")
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total" | State!="District of Columbia") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total" | State!="District of Columbia") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
View(df)
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total") %>% subset(State!="District of Columbia") %>%
select(State, State.Code, Year, Deaths, Population,
death_per_100k)
View(df)
#Treatment Year is if they legalize marijuana recreationally
df = df %>% mutate(treatment_year = ifelse(State=="Alaska" | State=="Oregon", 2014,
ifelse(State=="Arizona" | State=="Montana" | State=="New Jersey", 2020,
ifelse(State=="California" | State=="Maine" | State=="Massachusetts" | State=="Nevada", 2016,
ifelse(State=="Colorado" | State=="Washington", 2012,
ifelse(State=="Illinois", 2019,
ifelse(State=="Michigan" | State=="Vermont", 2018, 0)))))))
#Table of Treatment Years
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(Treatment_Year != 0) %>% kbl(format="latex")
#Summarizing Data
df %>% group_by(State) %>% summarize(Mean_Death_Rate = mean(death_per_100k)) %>% kbl(format="latex")
View(df)
View(df)
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
#Summarizing Deaths Per Year
df %>% group_by(Year) %>% summarize(Mean_Death_Rate = mean(death_per_100k)) %>% kbl(format="latex")
#Table of Treatment Years
df %>% group_by(State) %>% summarize(Treatment_Year = mean(treatment_year)) %>%
subset(Treatment_Year != 0) %>% round(2) %>%  kbl(format="latex")
#Summarizing Deaths Per State
df %>% group_by(State) %>% summarize(Mean_Death_Rate = round(mean(death_per_100k),2)) %>% kbl(format="latex")
#Summarizing Deaths Per Year
df %>% group_by(Year) %>% summarize(Mean_Death_Rate = round(mean(death_per_100k),2)) %>% kbl(format="latex")
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
summary(agg_effects_es)
stargazer(agg_effects_es)
stargazer(agg_effects_es %>% tidy())
stargazer(summary(agg_effects_es))
agg_effects_es %>% kbl(format="latex")
View(agg_effects_es)
summary(agg_effects_es) %>% kbl(format="latex")
View(agg_effects_es)
kbl(agg_effects_es$egt)
new_df = data.frame(agg_effects_es$egt,
agg_effects_es$att.egt,
agg_effects_es$se.egt,
agg_effects_es$crit.val.egt)
View(new_df)
View(new_df)
new_df = data.frame(agg_effects_es$egt,
agg_effects_es$att.egt,
agg_effects_es$se.egt) %>%
mutate(lower_int = agg_effects_es.att.egt-1.98*agg_effects_es.se.egt,
upper_int = agg_effects_es.att.egt+1.98*agg_effects_es.se.egt)
View(df)
View(new_df)
stargazer(new_df)
kbl(new_df, format="latex")
new_df = data.frame(agg_effects_es$egt,
agg_effects_es$att.egt,
agg_effects_es$se.egt) %>%
mutate(lower_int = agg_effects_es.att.egt-1.98*agg_effects_es.se.egt,
upper_int = agg_effects_es.att.egt+1.98*agg_effects_es.se.egt) %>% round(2)
kbl(new_df, format="latex")
# Plot event-study coefficients
ggdid(agg_effects_es)
summary(df %>% group_by(State))
# OLS Regression
df = df %>% mutate(treated = elseif(year>=treatment_year,1,0))
# OLS Regression
df = df %>% mutate(treated = ifelse(year>=treatment_year,1,0))
# OLS Regression
df = df %>% mutate(treated = ifelse(year >= treatment_year, 1, 0))
View(df)
# OLS Regression
df = df %>% mutate(treated = ifelse(Year >= treatment_year, 1, 0))
View(df)
# OLS Regression
df = df %>% mutate(treated = ifelse(treatment == 0, 0, ifelse(Year >= treatment_year, 1, 0))
View(df)
# OLS Regression
df = df %>% mutate(treated = ifelse(treatment == 0, 0, ifelse(Year >= treatment_year, 1, 0)))
# OLS Regression
df = df %>% mutate(treated = ifelse(treatment_year == 0, 0, ifelse(Year >= treatment_year, 1, 0)))
View(df)
lm(formula, df)
lm(as.formula(formula), df)
lm(death_per_100k = treated + Year + Population, df)
lm(death_per_100k = treated + Year + Population, data=df)
lm(death_per_100k ~ treated + Year + Population, data=df)
reg = lm(death_per_100k ~ treated + Year + Population, data=df)
summary(reg)
df = df %>% mutate(years_from_treat = ifelse(treatment_year == 0, 0, ifelse(Year >= treatment_year, Year-treatment_year +1, 0)))
reg = lm(death_per_100k ~ years_from_treat + Year + Population, data=df)
summary(reg)
# Plot group-time ATTs
ggdid(atts)
summary(agg_effects_es)
# Group-time ATTs
summary(atts)
summary(agg_effects)
stargazer(agg_effects)
stargazer(agg_effects$overall.att)
