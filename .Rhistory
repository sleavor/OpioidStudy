df = read_txt('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read_delim('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read.delim('/Data/Opioid Related Death Summary, 1999-2020.txt')
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
View(df)
df = df %>% mutate(death_per_100k = Deaths/Population*100000)
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
# tell here where we are so we can use it elsewhere
here::i_am("R/include.R")
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
# tell here where we are so we can use it elsewhere
here::i_am("R/include.R")
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000)
View(df)
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
drop(Notes=="Total")
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
View(df)
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(state="West Virginia", 2012,
ifelse(state=="Michigan" | state =="Tennessee" | state=="Washington", 2016,
ifelse(state=="Kentucky", 2013, 0))))
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase
)
df = read.delim('Data/Opioid Related Death Summary, 1999-2020.txt')
df = df %>% mutate(death_per_100k = Deaths/Population*100000) %>%
subset(Notes!="Total") %>% select(State, State.Code, Year, Deaths, Population,
death_per_100k)
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(state="West Virginia", 2012,
ifelse(state=="Michigan" | state =="Tennessee" | state=="Washington", 2016,
ifelse(state=="Kentucky", 2013, 0))))
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(state=="West Virginia", 2012,
ifelse(state=="Michigan" | state =="Tennessee" | state=="Washington", 2016,
ifelse(state=="Kentucky", 2013, 0))))
#Treatment Year is if they added one-day reporting
df = df %>% mutate(treatment_year = ifelse(State=="West Virginia", 2012,
ifelse(State=="Michigan" | State =="Tennessee" | State=="Washington", 2016,
ifelse(State=="Kentucky", 2013, 0))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
#xformla = ~ l_police, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
#Treatment Year for online provider access
df = df %>% mutate(treatment_year = ifelse(State=="Kentucky", 2005,
ifelse(State=="Massachusetts", 2011,
ifelse(State=="Michigan", 2003,
ifelse(State=="New York", 2010,
ifelse(State=="North Carolina" | State=="Tennessee", 2007,
ifelse(State=="Washington", 2012,
ifelse(State=="West Virginia", 2004, 0))))))))
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
#Treatment Year for online provider access
df = df %>% mutate(treatment_year = ifelse(State=="Kentucky", 2005,
ifelse(State=="Massachusetts", 2011,
ifelse(State=="Michigan", 2003,
ifelse(State=="New York", 2010,
ifelse(State=="North Carolina" | State=="Tennessee", 2007,
ifelse(State=="Washington", 2012,
ifelse(State=="West Virginia", 2004, 0))))))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
#Treatment Year is if they legalize weed.
df = df %>% mutate(treatment_year = ifelse(State=="Alaska" | State=="Oregon", 2014,
ifelse(State=="Arizona" | State=="Montana" | State=="New Jersey", 2020,
ifelse(State=="California" | State=="Maine" | State=="Massachusetts" | State=="Nevada", 2016,
ifelse(State=="Colorado" | State=="Washington", 2012,
ifelse(State=="Illinois", 2019,
ifelse(State=="Michigan" | State=="Vermont", 2018, 0)))))))
atts <- att_gt(yname = "death_per_100k", # LHS variable
tname = "Year", # time variable
idname = "State.Code", # id variable
gname = "treatment_year", # first treatment period variable
data = df, # data
#xformla = NULL, # no covariates
xformla = ~ Population, # with covariates
est_method = "dr", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated"
bstrap = TRUE, # if TRUE compute bootstrapped SE
biters = 1000, # number of bootstrap iterations
print_details = FALSE, # if TRUE, print detailed results
clustervars = "State.Code", # cluster level
panel = TRUE) # whether the data is panel or repeated cross-sectional
# Aggregate ATT
agg_effects <- aggte(atts, type = "group")
summary(agg_effects)
# Group-time ATTs
summary(atts)
# Plot group-time ATTs
ggdid(atts)
# Event-study
agg_effects_es <- aggte(atts, type = "dynamic")
summary(agg_effects_es)
# Plot event-study coefficients
ggdid(agg_effects_es)
df %>% group_by(treatment_year) %>% sort() %>% kbl()
utils::install.packages("librarian")
# installs the librarian package if you don't have it
if (!("librarian" %in% rownames(utils::installed.packages()))) {
utils::install.packages("librarian")
}
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
# tell here where we are so we can use it elsewhere
here::i_am("include.R")
df %>% group_by(treatment_year) %>% sort() %>% kbl()
# put all of the packages that you import here
librarian::shelf(
cran_repo = "https://cran.microsoft.com/", # Dallas, TX
ask = FALSE,
stats, # https://stackoverflow.com/questions/26935095/r-dplyr-filter-not-masking-base-filter#answer-26935536
here,
kableExtra,
rlang,
ggthemes,
tidyverse,
janitor,
magrittr,
glue,
lubridate,
haven,
snakecase,
sandwich,
lmtest,
gganimate,
gapminder,
stargazer,
snakecase,
did
)
df %>% group_by(treatment_year) %>% sort() %>% kbl()
df %>% group_by(State) %>% sort(treatment_year) %>% select(treatment_year) %>% kbl()
df %>% group_by(State) %>% sort() %>% select(treatment_year) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = treatment_year) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% drop(treatment_year==0) %>% kbl()
df %>% group_by(State) %>% summarize(treatment_year = mean(treatment_year)) %>% drop(0) %>% kbl()
